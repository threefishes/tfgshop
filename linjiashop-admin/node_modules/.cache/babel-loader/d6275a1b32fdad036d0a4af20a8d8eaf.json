{"remainingRequest":"/home/linjiashop/linjiashop-admin/node_modules/thread-loader/dist/cjs.js!/home/linjiashop/linjiashop-admin/node_modules/babel-loader/lib/index.js!/home/linjiashop/linjiashop-admin/src/views/shop/goods/goods.js","dependencies":[{"path":"/home/linjiashop/linjiashop-admin/src/views/shop/goods/goods.js","mtime":1701070142170},{"path":"/home/linjiashop/linjiashop-admin/babel.config.js","mtime":1701070142140},{"path":"/home/linjiashop/linjiashop-admin/node_modules/cache-loader/dist/cjs.js","mtime":1701072373500},{"path":"/home/linjiashop/linjiashop-admin/node_modules/thread-loader/dist/cjs.js","mtime":1701072371351},{"path":"/home/linjiashop/linjiashop-admin/node_modules/babel-loader/lib/index.js","mtime":1701072375263}],"contextDependencies":[],"result":["import goodsApi from '@/api/shop/goods';\nimport { getApiUrl } from '@/utils/utils';\nimport permission from '@/directive/permission/index.js';\nexport default {\n  name: 'goods',\n  directives: {\n    permission: permission\n  },\n  data: function data() {\n    return {\n      listQuery: {\n        page: 1,\n        limit: 20,\n        name: undefined\n      },\n      total: 0,\n      list: null,\n      listLoading: true,\n      selRow: {},\n      apiUrl: getApiUrl()\n    };\n  },\n  filters: {\n    statusFilter: function statusFilter(status) {\n      var statusMap = {\n        published: 'success',\n        draft: 'gray',\n        deleted: 'danger'\n      };\n      return statusMap[status];\n    }\n  },\n  created: function created() {\n    this.init();\n  },\n  methods: {\n    init: function init() {\n      this.fetchData();\n    },\n    fetchData: function fetchData() {\n      var _this = this;\n      this.listLoading = true;\n      goodsApi.getList(this.listQuery).then(function (response) {\n        _this.list = response.data.records;\n        _this.listLoading = false;\n        _this.total = response.data.total;\n      });\n    },\n    search: function search() {\n      this.listQuery.page = 1;\n      this.fetchData();\n    },\n    reset: function reset() {\n      this.listQuery.name = '';\n      this.listQuery.page = 1;\n      this.fetchData();\n    },\n    handleFilter: function handleFilter() {\n      this.listQuery.page = 1;\n      this.getList();\n    },\n    handleClose: function handleClose() {},\n    fetchNext: function fetchNext() {\n      this.listQuery.page = this.listQuery.page + 1;\n      this.fetchData();\n    },\n    fetchPrev: function fetchPrev() {\n      this.listQuery.page = this.listQuery.page - 1;\n      this.fetchData();\n    },\n    fetchPage: function fetchPage(page) {\n      this.listQuery.page = page;\n      this.fetchData();\n    },\n    changeSize: function changeSize(limit) {\n      this.listQuery.limit = limit;\n      this.fetchData();\n    },\n    handleCurrentChange: function handleCurrentChange(currentRow, oldCurrentRow) {\n      this.selRow = currentRow;\n    },\n    checkSel: function checkSel() {\n      if (this.selRow && this.selRow.id) {\n        return true;\n      }\n      this.$message({\n        message: this.$t('common.mustSelectOne'),\n        type: 'warning'\n      });\n      return false;\n    },\n    add: function add() {\n      this.$router.push('goodsEdit');\n    },\n    edit: function edit(id) {\n      this.$router.push({\n        path: 'goodsEdit',\n        query: {\n          id: id\n        }\n      });\n    },\n    changeIsOnSale: function changeIsOnSale(data) {\n      var _this2 = this;\n      goodsApi.changeIsOnSale(data.id, data.isOnSale).then(function (response) {\n        _this2.$message({\n          message: data.isOnSale ? '上架成功' : '下架成功',\n          type: 'success'\n        });\n      });\n    }\n  }\n};",null]}