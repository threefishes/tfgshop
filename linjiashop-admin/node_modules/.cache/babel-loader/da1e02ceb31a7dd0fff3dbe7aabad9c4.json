{"remainingRequest":"/home/linjiashop/linjiashop-admin/node_modules/thread-loader/dist/cjs.js!/home/linjiashop/linjiashop-admin/node_modules/babel-loader/lib/index.js!/home/linjiashop/linjiashop-admin/src/views/cms/banner/banner.js?vue&type=script&lang=js&external","dependencies":[{"path":"/home/linjiashop/linjiashop-admin/src/views/cms/banner/banner.js","mtime":1701070142167},{"path":"/home/linjiashop/linjiashop-admin/babel.config.js","mtime":1701070142140},{"path":"/home/linjiashop/linjiashop-admin/node_modules/cache-loader/dist/cjs.js","mtime":1701072373500},{"path":"/home/linjiashop/linjiashop-admin/node_modules/thread-loader/dist/cjs.js","mtime":1701072371351},{"path":"/home/linjiashop/linjiashop-admin/node_modules/babel-loader/lib/index.js","mtime":1701072375263}],"contextDependencies":[],"result":["import { remove as _remove, getList, save as _save } from '@/api/cms/banner';\nimport categoryApi from '@/api/shop/category';\nimport { getToken } from '@/utils/auth';\nimport { Loading } from 'element-ui';\nimport { getApiUrl } from '@/utils/utils';\nimport permission from '@/directive/permission/index.js';\nexport default {\n  name: 'banner',\n  directives: {\n    permission: permission\n  },\n  data: function data() {\n    return {\n      uploadUrl: '',\n      uploadFileId: '',\n      uploadHeaders: {\n        'Authorization': ''\n      },\n      loadingInstance: {},\n      formVisible: false,\n      formTitle: '添加banner',\n      deptList: [],\n      isAdd: true,\n      options: [{\n        label: '首页',\n        value: 'index'\n      }, {\n        label: '新闻',\n        value: 'news'\n      }, {\n        label: '产品',\n        value: 'product'\n      }, {\n        label: '解决方案',\n        value: 'solution'\n      }, {\n        label: '案例',\n        value: 'case'\n      }],\n      form: {\n        id: '',\n        title: '',\n        page: '',\n        param: '',\n        img: '',\n        idFile: '',\n        type: 'index'\n      },\n      listQuery: {\n        title: undefined\n      },\n      list: null,\n      listLoading: true,\n      selRow: {},\n      shopCategory: {\n        id: undefined,\n        show: false,\n        disabled: true\n      }\n    };\n  },\n  computed: {\n    rules: function rules() {\n      return {\n        title: [{\n          required: true,\n          message: '标题不能为空',\n          trigger: 'blur'\n        }]\n      };\n    }\n  },\n  created: function created() {\n    this.shopCategory.id = this.$route.query.idCategory;\n    this.init();\n  },\n  methods: {\n    init: function init() {\n      this.uploadUrl = getApiUrl() + '/file';\n      this.uploadHeaders['Authorization'] = getToken();\n      this.fetchData();\n      if (this.shopCategory.id) {\n        this.shopCategory.show = true;\n      }\n    },\n    fetchData: function fetchData() {\n      var _this = this;\n      this.listLoading = true;\n      getList(this.listQuery).then(function (response) {\n        _this.list = response.data;\n        for (var index in _this.list) {\n          var item = _this.list[index];\n          item.img = getApiUrl() + '/file/getImgStream?idFile=' + item.idFile;\n        }\n        _this.listLoading = false;\n      });\n    },\n    search: function search() {\n      this.listQuery.page = 1;\n      this.fetchData();\n    },\n    reset: function reset() {\n      this.listQuery.title = '';\n      this.listQuery.page = 1;\n      this.fetchData();\n    },\n    handleFilter: function handleFilter() {\n      this.getList();\n    },\n    handleCurrentChange: function handleCurrentChange(currentRow, oldCurrentRow) {\n      this.selRow = currentRow;\n    },\n    resetForm: function resetForm() {\n      this.form = {\n        id: '',\n        title: '',\n        page: '',\n        param: '',\n        idFile: this.uploadFileId,\n        type: ''\n      };\n    },\n    add: function add() {\n      this.resetForm();\n      this.formTitle = '添加banner';\n      this.formVisible = true;\n      this.isAdd = true;\n    },\n    save: function save() {\n      var _this2 = this;\n      this.$refs['form'].validate(function (valid) {\n        if (valid) {\n          _save({\n            id: _this2.form.id,\n            title: _this2.form.title,\n            page: _this2.form.page,\n            param: _this2.form.param,\n            idFile: _this2.uploadFileId,\n            type: _this2.form.type\n          }).then(function (response) {\n            _this2.$message({\n              message: _this2.$t('common.optionSuccess'),\n              type: 'success'\n            });\n            _this2.fetchData();\n            _this2.formVisible = false;\n          });\n        } else {\n          return false;\n        }\n      });\n    },\n    checkSel: function checkSel() {\n      if (this.selRow && this.selRow.id) {\n        return true;\n      }\n      this.$message({\n        message: this.$t('common.mustSelectOne'),\n        type: 'warning'\n      });\n      return false;\n    },\n    clickRow: function clickRow(row) {\n      this.shopCategory.disabled = false;\n      this.shopCategory.idBanner = row.id;\n    },\n    setBanner: function setBanner() {\n      var _this3 = this;\n      if (this.shopCategory.idBanner) {\n        categoryApi.setCategoryBanner(this.shopCategory.id, this.shopCategory.idBanner).then(function (response) {\n          _this3.$message({\n            message: '设置成功',\n            type: 'success'\n          });\n          _this3.shopCategory.disabled = true;\n        });\n      } else {\n        this.$message({\n          message: '请先选中要设置的banner',\n          type: 'warning'\n        });\n      }\n    },\n    remove: function remove() {\n      var _this4 = this;\n      if (this.checkSel()) {\n        var id = this.selRow.id;\n        this.$confirm('该操作将连通商品类别余banner关联关系一并删除，确认该操作？', this.$t('common.tooltip'), {\n          confirmButtonText: this.$t('button.submit'),\n          cancelButtonText: this.$t('button.cancel'),\n          type: 'warning'\n        }).then(function () {\n          _remove(id).then(function (response) {\n            _this4.$message({\n              message: _this4.$t('common.optionSuccess'),\n              type: 'success'\n            });\n            _this4.fetchData();\n          });\n        }).catch(function () {});\n      }\n    },\n    handleBeforeUpload: function handleBeforeUpload() {\n      if (this.uploadFileId !== '') {\n        this.$message({\n          message: this.$t('common.mustSelectOne'),\n          type: 'warning'\n        });\n        return false;\n      }\n      this.loadingInstance = Loading.service({\n        lock: true,\n        text: this.$t('common.uploading'),\n        spinner: 'el-icon-loading',\n        background: 'rgba(0, 0, 0, 0.7)'\n      });\n    },\n    handleUploadSuccess: function handleUploadSuccess(response, raw) {\n      this.loadingInstance.close();\n      if (response.code === 20000) {\n        this.uploadFileId = response.data.realFileName;\n        this.form.fileName = response.data.originalFileName;\n      } else {\n        this.$message({\n          message: this.$t('common.uploadError'),\n          type: 'error'\n        });\n      }\n    }\n  }\n};",null]}