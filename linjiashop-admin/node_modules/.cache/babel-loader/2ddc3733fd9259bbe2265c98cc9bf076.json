{"remainingRequest":"/home/linjiashop/linjiashop-admin/node_modules/babel-loader/lib/index.js!/home/linjiashop/linjiashop-admin/src/views/shop/order/order.js?vue&type=script&lang=js&external","dependencies":[{"path":"/home/linjiashop/linjiashop-admin/src/views/shop/order/order.js","mtime":1701070142171},{"path":"/home/linjiashop/linjiashop-admin/babel.config.js","mtime":1701070142140},{"path":"/home/linjiashop/linjiashop-admin/node_modules/cache-loader/dist/cjs.js","mtime":1701072373500},{"path":"/home/linjiashop/linjiashop-admin/node_modules/babel-loader/lib/index.js","mtime":1701072375263}],"contextDependencies":[],"result":["\"use strict\";\n\nvar _interopRequireDefault = require(\"/home/linjiashop/linjiashop-admin/node_modules/@babel/runtime/helpers/interopRequireDefault.js\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _order = _interopRequireDefault(require(\"@/api/shop/order\"));\nvar _express = _interopRequireDefault(require(\"@/api/system/express\"));\nvar _utils = require(\"@/utils/utils\");\nvar _default = exports.default = {\n  name: 'order',\n  data: function data() {\n    return {\n      listQuery: {\n        page: 1,\n        limit: 20,\n        mobile: undefined,\n        orderSn: undefined,\n        status: undefined,\n        date: undefined,\n        startDate: undefined,\n        endDate: undefined\n      },\n      orderDate: undefined,\n      total: 0,\n      list: null,\n      listLoading: true,\n      selRow: {},\n      logVisible: false,\n      logs: [],\n      expressList: [],\n      //发货表单\n      shipping: {\n        show: false,\n        id: '',\n        idExpress: '',\n        shippingSn: ''\n      },\n      //物流信息\n      shippingInfo: {\n        show: false,\n        form: {\n          id: '',\n          idExpress: '',\n          shippingSn: '',\n          traces: []\n        }\n      },\n      query: {\n        button: {\n          lastStatus: 'all',\n          lastDate: 'all',\n          showCustomer: false,\n          css: {\n            status: {\n              all: 'primary',\n              unPay: 'default',\n              unSend: 'default',\n              sended: 'default',\n              finished: 'default',\n              cancel: 'default',\n              refundIng: 'default',\n              refund: 'default'\n            },\n            date: {\n              all: 'primary',\n              today: 'default',\n              yesterday: 'default',\n              seven: 'default',\n              thirty: 'default',\n              month: 'default',\n              year: 'default',\n              customer: 'default'\n            }\n          },\n          tag: {\n            unPay: 0,\n            unSend: 0,\n            sended: 0,\n            finished: 0,\n            cancel: 0,\n            refundIng: 0,\n            refund: 0\n          }\n        }\n      }\n    };\n  },\n  filters: {\n    statusFilter: function statusFilter(status) {\n      var statusMap = {\n        published: 'success',\n        draft: 'gray',\n        deleted: 'danger'\n      };\n      return statusMap[status];\n    }\n  },\n  created: function created() {\n    this.init();\n  },\n  methods: {\n    init: function init() {\n      var _this = this;\n      this.fetchData();\n      _order.default.getOrderStatistic().then(function (response) {\n        var data = response.data;\n        for (var key in data) {\n          _this.query.button.tag[key] = data[key];\n        }\n      });\n      _express.default.queryAll().then(function (response) {\n        _this.expressList = response.data;\n      });\n    },\n    fetchData: function fetchData() {\n      var _this2 = this;\n      this.listLoading = true;\n      if (this.orderDate) {\n        this.listQuery['startDate'] = this.orderDate[0];\n        this.listQuery['endDate'] = this.orderDate[1];\n      }\n      _order.default.getList(this.listQuery).then(function (response) {\n        _this2.list = response.data.records;\n        _this2.listLoading = false;\n        _this2.total = response.data.total;\n      });\n    },\n    search: function search() {\n      this.listQuery.page = 1;\n      this.fetchData();\n    },\n    reset: function reset() {\n      this.listQuery.mobile = '';\n      this.listQuery.orderSn = '';\n      this.listQuery.page = 1;\n      this.fetchData();\n    },\n    queryByState: function queryByState(status) {\n      var lastStatus = this.query.button.lastStatus;\n      this.query.button.css.status[lastStatus] = 'default';\n      this.query.button.css.status[status] = 'primary';\n      this.query.button.lastStatus = status;\n      if (status !== 'all') {\n        this.listQuery.status = status;\n      } else {\n        this.listQuery.status = '';\n      }\n      this.fetchData();\n    },\n    queryByDate: function queryByDate(date) {\n      var lastDate = this.query.button.lastDate;\n      this.query.button.css.date[lastDate] = 'default';\n      this.query.button.css.date[date] = 'primary';\n      this.query.button.lastDate = date;\n      if (date !== 'all' && date !== 'customer') {\n        this.listQuery.date = date;\n      } else {\n        this.listQuery.date = '';\n      }\n      if (date === 'customer') {\n        this.query.button.showCustomer = true;\n        return;\n      } else {\n        this.query.button.showCustomer = false;\n      }\n      this.fetchData();\n    },\n    handleFilter: function handleFilter() {\n      this.listQuery.page = 1;\n      this.getList();\n    },\n    handleClose: function handleClose() {},\n    fetchNext: function fetchNext() {\n      this.listQuery.page = this.listQuery.page + 1;\n      this.fetchData();\n    },\n    fetchPrev: function fetchPrev() {\n      this.listQuery.page = this.listQuery.page - 1;\n      this.fetchData();\n    },\n    fetchPage: function fetchPage(page) {\n      this.listQuery.page = page;\n      this.fetchData();\n    },\n    changeSize: function changeSize(limit) {\n      this.listQuery.limit = limit;\n      this.fetchData();\n    },\n    handleCurrentChange: function handleCurrentChange(currentRow, oldCurrentRow) {\n      this.selRow = currentRow;\n    },\n    checkSel: function checkSel() {\n      if (this.selRow && this.selRow.id) {\n        return true;\n      }\n      this.$message({\n        message: this.$t('common.mustSelectOne'),\n        type: 'warning'\n      });\n      return false;\n    },\n    formatPrice: function formatPrice(price) {\n      return (price / 100).toFixed(2);\n    },\n    viewShippingInfo: function viewShippingInfo(data) {\n      var _this3 = this;\n      this.shippingInfo.form = data;\n      var expressList = this.expressList;\n      var shipperCode = '';\n      for (var index in expressList) {\n        var express = expressList[index];\n        if (express.id === data.idExpress) {\n          shipperCode = express.code;\n        }\n      }\n      _order.default.getExpressInfo(data.orderSn, shipperCode).then(function (response) {\n        _this3.shippingInfo.form['traces'] = response.data.infoList;\n        _this3.shippingInfo.show = true;\n      });\n    },\n    openSendOutForm: function openSendOutForm(id) {\n      this.shipping.id = id;\n      this.shipping.show = true;\n    },\n    sendOut: function sendOut() {\n      var _this4 = this;\n      this.$confirm(this.$t('common.optionConfirm'), this.$t('common.tooltip'), {\n        confirmButtonText: this.$t('button.submit'),\n        cancelButtonText: this.$t('button.cancel'),\n        type: 'warning'\n      }).then(function () {\n        _order.default.sendOut(_this4.shipping.id, _this4.shipping.idExpress, _this4.shipping.shippingSn).then(function (response) {\n          _this4.fetchData();\n          _this4.shipping.show = false;\n          _this4.$message({\n            message: '发货成功',\n            type: 'success'\n          });\n        });\n      }).catch(function () {});\n    },\n    viewLog: function viewLog(id) {\n      var _this5 = this;\n      this.logs = [];\n      this.logVisible = true;\n      _order.default.getLogs(id).then(function (response) {\n        _this5.logs = response.data;\n      });\n    },\n    addComment: function addComment(id) {\n      this.$prompt('请输入备注信息', '提示', {\n        confirmButtonText: '确定',\n        cancelButtonText: '取消'\n      }).then(function (_ref) {\n        var value = _ref.value;\n        _order.default.addComment(id, value);\n      }).catch(function () {});\n    },\n    exportXls: function exportXls() {\n      _order.default.exportXls(this.listQuery).then(function (response) {\n        window.location.href = (0, _utils.getApiUrl)() + '/file/download?fileName=' + response.data.realFileName;\n      });\n    }\n  }\n};",null]}