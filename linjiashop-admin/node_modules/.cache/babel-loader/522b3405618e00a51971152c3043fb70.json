{"remainingRequest":"/home/linjiashop/linjiashop-admin/node_modules/babel-loader/lib/index.js!/home/linjiashop/linjiashop-admin/src/views/system/task/task.js","dependencies":[{"path":"/home/linjiashop/linjiashop-admin/src/views/system/task/task.js","mtime":1701070142173},{"path":"/home/linjiashop/linjiashop-admin/babel.config.js","mtime":1701070142140},{"path":"/home/linjiashop/linjiashop-admin/node_modules/cache-loader/dist/cjs.js","mtime":1701072373500},{"path":"/home/linjiashop/linjiashop-admin/node_modules/babel-loader/lib/index.js","mtime":1701072375263}],"contextDependencies":[],"result":["\"use strict\";\n\nvar _interopRequireDefault = require(\"/home/linjiashop/linjiashop-admin/node_modules/@babel/runtime/helpers/interopRequireDefault.js\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nrequire(\"core-js/modules/es6.function.name\");\nvar _task = require(\"@/api/system/task\");\nvar _index = _interopRequireDefault(require(\"@/directive/permission/index.js\"));\nvar _default = exports.default = {\n  name: 'task',\n  directives: {\n    permission: _index.default\n  },\n  data: function data() {\n    return {\n      formVisible: false,\n      formTitle: '添加任务',\n      deptList: [],\n      isAdd: true,\n      form: {\n        id: '',\n        name: '',\n        jobClass: '',\n        cron: '',\n        note: '',\n        disabled: true,\n        data: ''\n      },\n      rules: {\n        name: [{\n          required: true,\n          message: '请输入任务名',\n          trigger: 'blur'\n        }, {\n          min: 2,\n          max: 20,\n          message: '长度在 3 到 20 个字符',\n          trigger: 'blur'\n        }],\n        jobClass: [{\n          required: true,\n          message: '请输入执行类',\n          trigger: 'blur'\n        }],\n        cron: [{\n          required: true,\n          message: '请输入定时规则',\n          trigger: 'blur'\n        }]\n      },\n      listQuery: {\n        name: undefined\n      },\n      total: 0,\n      list: null,\n      listLoading: true,\n      selRow: {}\n    };\n  },\n  filters: {\n    statusFilter: function statusFilter(status) {\n      var statusMap = {\n        published: 'success',\n        draft: 'gray',\n        deleted: 'danger'\n      };\n      return statusMap[status];\n    }\n  },\n  created: function created() {\n    this.init();\n  },\n  methods: {\n    init: function init() {\n      this.fetchData();\n    },\n    fetchData: function fetchData() {\n      var _this = this;\n      this.listLoading = true;\n      (0, _task.getList)(this.listQuery).then(function (response) {\n        _this.list = response.data;\n        _this.listLoading = false;\n      });\n    },\n    search: function search() {\n      this.listQuery.page = 1;\n      this.fetchData();\n    },\n    reset: function reset() {\n      this.listQuery.name = '';\n      this.listQuery.page = 1;\n      this.fetchData();\n    },\n    handleFilter: function handleFilter() {\n      this.listQuery.page = 1;\n      this.getList();\n    },\n    handleClose: function handleClose() {},\n    handleCurrentChange: function handleCurrentChange(currentRow, oldCurrentRow) {\n      this.selRow = currentRow;\n    },\n    resetForm: function resetForm() {\n      this.form = {};\n    },\n    add: function add() {\n      this.resetForm();\n      this.formTitle = '添加任务';\n      this.formVisible = true;\n      this.isAdd = true;\n    },\n    save: function save() {\n      var _this2 = this;\n      var self = this;\n      this.$refs['form'].validate(function (valid) {\n        if (valid) {\n          (0, _task.save)({\n            id: self.form.id,\n            name: self.form.name,\n            jobClass: self.form.jobClass,\n            cron: self.form.cron,\n            data: self.form.data,\n            note: self.form.note\n          }).then(function (response) {\n            _this2.$message({\n              message: '提交成功',\n              type: 'success'\n            });\n            _this2.fetchData();\n            _this2.formVisible = false;\n          });\n        } else {\n          return false;\n        }\n      });\n    },\n    checkSel: function checkSel() {\n      if (this.selRow && this.selRow.id) {\n        return true;\n      }\n      this.$message({\n        message: '请选中操作项',\n        type: 'warning'\n      });\n      return false;\n    },\n    enable: function enable(id) {\n      var _this3 = this;\n      this.$confirm('确定启用该定时任务?', '提示', {\n        confirmButtonText: '确定',\n        cancelButtonText: '取消',\n        type: 'warning'\n      }).then(function () {\n        (0, _task.enable)(id).then(function (response) {\n          _this3.$message({\n            message: '操作成功',\n            type: 'success'\n          });\n          _this3.fetchData();\n        });\n      }).catch(function () {});\n    },\n    disable: function disable(id) {\n      var _this4 = this;\n      this.$confirm('确定禁用该定时任务?', '提示', {\n        confirmButtonText: '确定',\n        cancelButtonText: '取消',\n        type: 'warning'\n      }).then(function () {\n        (0, _task.disable)(id).then(function (response) {\n          _this4.$message({\n            message: '操作成功',\n            type: 'success'\n          });\n          _this4.fetchData();\n        });\n      }).catch(function () {});\n    },\n    viewLog: function viewLog(taskId) {\n      this.$router.push({\n        path: '/taskLog',\n        query: {\n          taskId: taskId\n        }\n      });\n    },\n    editItem: function editItem(record) {\n      this.selRow = Object.assign({}, record);\n      this.edit();\n    },\n    edit: function edit() {\n      if (this.checkSel()) {\n        this.isAdd = false;\n        this.form = this.selRow;\n        this.formTitle = '修改任务';\n        this.formVisible = true;\n      }\n    },\n    removeItem: function removeItem(record) {\n      this.selRow = record;\n      this.remove();\n    },\n    remove: function remove() {\n      var _this5 = this;\n      if (this.checkSel()) {\n        var id = this.selRow.id;\n        this.$confirm('确定删除该记录?', '提示', {\n          confirmButtonText: '确定',\n          cancelButtonText: '取消',\n          type: 'warning'\n        }).then(function () {\n          (0, _task.remove)(id).then(function (response) {\n            _this5.$message({\n              message: '操作成功',\n              type: 'success'\n            });\n            _this5.fetchData();\n          });\n        }).catch(function () {});\n      }\n    },\n    runOnce: function runOnce(id) {\n      var _this6 = this;\n      this.$confirm('确定立即执行该定时任务?', '提示', {\n        confirmButtonText: '确定',\n        cancelButtonText: '取消',\n        type: 'warning'\n      }).then(function () {\n        (0, _task.runOnce)(id).then(function (response) {\n          _this6.$message({\n            message: '操作成功',\n            type: 'success'\n          });\n          _this6.fetchData();\n        });\n      }).catch(function () {});\n    }\n  }\n};",null]}