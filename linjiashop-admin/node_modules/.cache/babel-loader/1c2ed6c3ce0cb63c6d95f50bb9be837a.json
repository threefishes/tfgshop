{"remainingRequest":"D:\\tfgshop\\linjiashop-admin\\node_modules\\thread-loader\\dist\\cjs.js!D:\\tfgshop\\linjiashop-admin\\node_modules\\babel-loader\\lib\\index.js!D:\\tfgshop\\linjiashop-admin\\src\\store\\modules\\user.js","dependencies":[{"path":"D:\\tfgshop\\linjiashop-admin\\src\\store\\modules\\user.js","mtime":1701070142000},{"path":"D:\\tfgshop\\linjiashop-admin\\babel.config.js","mtime":1701070142000},{"path":"D:\\tfgshop\\linjiashop-admin\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\tfgshop\\linjiashop-admin\\node_modules\\thread-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\tfgshop\\linjiashop-admin\\node_modules\\babel-loader\\lib\\index.js","mtime":456789000000}],"contextDependencies":[],"result":["import \"core-js/modules/es6.function.name\";\nimport { login as _login, logout as _logout, getInfo as _getInfo } from '@/api/user';\nimport { getToken, setToken, removeToken } from '@/utils/auth';\nimport { resetRouter } from '@/router';\nimport { listForRouter } from '@/api/system/menu';\nvar state = {\n  token: getToken(),\n  name: '',\n  avatar: '',\n  profile: undefined,\n  roles: []\n};\nvar mutations = {\n  SET_TOKEN: function SET_TOKEN(state, token) {\n    state.token = token;\n  },\n  SET_NAME: function SET_NAME(state, name) {\n    state.name = name;\n  },\n  SET_AVATAR: function SET_AVATAR(state, avatar) {\n    state.avatar = avatar;\n  },\n  SET_PROFILE: function SET_PROFILE(state, profile) {\n    state.profile = profile;\n  },\n  SET_PERMISSIONS: function SET_PERMISSIONS(state, permissions) {\n    state.permissions = permissions;\n  },\n  SET_ROLES: function SET_ROLES(state, roles) {\n    state.roles = roles;\n  }\n};\nvar actions = {\n  // user login\n  login: function login(_ref, userInfo) {\n    var dispatch = _ref.dispatch,\n      commit = _ref.commit;\n    var username = userInfo.username,\n      password = userInfo.password;\n    return new Promise(function (resolve, reject) {\n      _login({\n        username: username.trim(),\n        password: password\n      }).then(function (response) {\n        var data = response.data;\n        commit('SET_TOKEN', data.token);\n        setToken(data.token);\n        resolve();\n      }).catch(function (error) {\n        reject(error);\n      });\n    });\n  },\n  // get user info\n  getInfo: function getInfo(_ref2) {\n    var commit = _ref2.commit,\n      state = _ref2.state;\n    return new Promise(function (resolve, reject) {\n      _getInfo().then(function (response) {\n        var data = response.data;\n        if (!data) {\n          reject('Verification failed, please Login again.');\n        }\n        var name = data.name,\n          profile = data.profile,\n          permissions = data.permissions,\n          roles = data.roles;\n        commit('SET_NAME', name);\n        commit('SET_AVATAR', profile.avatar);\n        commit('SET_PROFILE', profile);\n        commit('SET_ROLES', roles);\n        commit('SET_PERMISSIONS', permissions);\n        resolve(data);\n      }).catch(function (error) {\n        reject(error);\n      });\n    });\n  },\n  // user logout\n  logout: function logout(_ref3) {\n    var commit = _ref3.commit,\n      state = _ref3.state;\n    return new Promise(function (resolve, reject) {\n      _logout(state.token).then(function () {\n        commit('SET_TOKEN', '');\n        commit('SET_NAME', '');\n        commit('SET_AVATAR', '');\n        commit('SET_PROFILE', {});\n        commit('SET_ROLES', []);\n        commit('SET_PERMISSIONS', []);\n        removeToken();\n        resetRouter();\n        resolve();\n      }).catch(function (error) {\n        reject(error);\n      });\n    });\n  },\n  // remove token\n  resetToken: function resetToken(_ref4) {\n    var commit = _ref4.commit;\n    return new Promise(function (resolve) {\n      commit('SET_TOKEN', '');\n      removeToken();\n      resolve();\n    });\n  },\n  updateToken: function updateToken(_ref5, _ref6) {\n    var commit = _ref5.commit;\n    var token = _ref6.token;\n    commit('SET_TOKEN', token);\n    setToken(token);\n  }\n};\nexport default {\n  namespaced: true,\n  state: state,\n  mutations: mutations,\n  actions: actions\n};",null]}