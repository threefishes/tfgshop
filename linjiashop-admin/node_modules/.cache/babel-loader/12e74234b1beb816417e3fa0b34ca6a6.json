{"remainingRequest":"/home/linjiashop/linjiashop-admin/node_modules/babel-loader/lib/index.js!/home/linjiashop/linjiashop-admin/src/views/login/login.js","dependencies":[{"path":"/home/linjiashop/linjiashop-admin/src/views/login/login.js","mtime":1701070142168},{"path":"/home/linjiashop/linjiashop-admin/babel.config.js","mtime":1701070142140},{"path":"/home/linjiashop/linjiashop-admin/node_modules/cache-loader/dist/cjs.js","mtime":1701072373500},{"path":"/home/linjiashop/linjiashop-admin/node_modules/babel-loader/lib/index.js","mtime":1701072375263}],"contextDependencies":[],"result":["\"use strict\";\n\nvar _interopRequireDefault = require(\"/home/linjiashop/linjiashop-admin/node_modules/@babel/runtime/helpers/interopRequireDefault.js\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _validate = require(\"@/utils/validate\");\nvar _LangSelect = _interopRequireDefault(require(\"@/components/LangSelect\"));\nvar _aes = _interopRequireDefault(require(\"@/utils/aes.js\"));\nvar _default = exports.default = {\n  name: 'login',\n  components: {\n    LangSelect: _LangSelect.default\n  },\n  data: function data() {\n    var _this = this;\n    var validateUsername = function validateUsername(rule, value, callback) {\n      if (!(0, _validate.isvalidUsername)(value)) {\n        callback(new Error(_this.$t('login.errorAccount')));\n      } else {\n        callback();\n      }\n    };\n    var validatePassword = function validatePassword(rule, value, callback) {\n      if (value.length < 5) {\n        callback(new Error(_this.$t('login.errorPassword')));\n      } else {\n        callback();\n      }\n    };\n    return {\n      loginForm: {\n        username: '',\n        password: ''\n      },\n      loginRules: {\n        username: [{\n          required: true,\n          trigger: 'blur',\n          validator: validateUsername\n        }],\n        password: [{\n          required: true,\n          trigger: 'blur',\n          validator: validatePassword\n        }]\n      },\n      loading: false,\n      pwdType: 'password',\n      redirect: '/'\n    };\n  },\n  mounted: function mounted() {\n    this.init();\n  },\n  methods: {\n    init: function init() {\n      var redirect = this.$route.query.redirect;\n      if (redirect) {\n        this.redirect = redirect;\n      }\n    },\n    showPwd: function showPwd() {\n      if (this.pwdType === 'password') {\n        this.pwdType = '';\n      } else {\n        this.pwdType = 'password';\n      }\n    },\n    handleLogin: function handleLogin() {\n      var _this2 = this;\n      var loginForm = this.loginForm;\n      this.$refs.loginForm.validate(function (valid) {\n        if (valid) {\n          _this2.loading = true;\n          var loginBody = {\n            username: loginForm.username,\n            password: _aes.default.encrypt(loginForm.password)\n          };\n          _this2.$store.dispatch('user/login', loginBody).then(function () {\n            _this2.loading = false;\n            _this2.$router.push(_this2.redirect);\n          }).catch(function (err) {\n            _this2.loading = false;\n          });\n        } else {\n          return false;\n        }\n      });\n    }\n  }\n};",null]}