{"remainingRequest":"/home/linjiashop/linjiashop-admin/node_modules/babel-loader/lib/index.js!/home/linjiashop/linjiashop-admin/src/views/cms/article/article.js?vue&type=script&lang=js&external","dependencies":[{"path":"/home/linjiashop/linjiashop-admin/src/views/cms/article/article.js","mtime":1701070142167},{"path":"/home/linjiashop/linjiashop-admin/babel.config.js","mtime":1701070142140},{"path":"/home/linjiashop/linjiashop-admin/node_modules/cache-loader/dist/cjs.js","mtime":1701072373500},{"path":"/home/linjiashop/linjiashop-admin/node_modules/babel-loader/lib/index.js","mtime":1701072375263}],"contextDependencies":[],"result":["\"use strict\";\n\nvar _interopRequireDefault = require(\"/home/linjiashop/linjiashop-admin/node_modules/@babel/runtime/helpers/interopRequireDefault.js\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _article = _interopRequireDefault(require(\"@/api/cms/article\"));\nvar _utils = require(\"@/utils/utils\");\nvar _default = exports.default = {\n  name: 'article',\n  data: function data() {\n    return {\n      formVisible: false,\n      formTitle: '添加文章',\n      deptList: [],\n      isAdd: true,\n      form: {\n        id: '',\n        title: '',\n        author: '',\n        img: ''\n      },\n      listQuery: {\n        page: 1,\n        limit: 20,\n        title: undefined,\n        author: undefined,\n        startDate: undefined,\n        endDate: undefined\n      },\n      rangeDate: undefined,\n      total: 0,\n      list: null,\n      listLoading: true,\n      selRow: {},\n      pickerOptions: {\n        shortcuts: [{\n          text: '最近一周',\n          onClick: function onClick(picker) {\n            var end = new Date();\n            var start = new Date();\n            start.setTime(start.getTime() - 3600 * 1000 * 24 * 7);\n            picker.$emit('pick', [start, end]);\n          }\n        }, {\n          text: '最近一个月',\n          onClick: function onClick(picker) {\n            var end = new Date();\n            var start = new Date();\n            start.setTime(start.getTime() - 3600 * 1000 * 24 * 30);\n            picker.$emit('pick', [start, end]);\n          }\n        }, {\n          text: '最近三个月',\n          onClick: function onClick(picker) {\n            var end = new Date();\n            var start = new Date();\n            start.setTime(start.getTime() - 3600 * 1000 * 24 * 90);\n            picker.$emit('pick', [start, end]);\n          }\n        }]\n      }\n    };\n  },\n  computed: {\n    rules: function rules() {\n      return {\n        title: [{\n          required: true,\n          message: '标题不能为空',\n          trigger: 'blur'\n        }],\n        author: [{\n          required: true,\n          message: '作者不能为空',\n          trigger: 'blur'\n        }]\n      };\n    }\n  },\n  created: function created() {\n    this.init();\n  },\n  methods: {\n    init: function init() {\n      this.fetchData();\n    },\n    fetchData: function fetchData() {\n      var _this = this;\n      this.listLoading = true;\n      var queryData = this.listQuery;\n      if (this.rangeDate) {\n        queryData['startDate'] = this.rangeDate[0];\n        queryData['endDate'] = this.rangeDate[1];\n      }\n      _article.default.getList(queryData).then(function (response) {\n        _this.list = response.data.records;\n        for (var index in _this.list) {\n          var item = _this.list[index];\n          item.img = (0, _utils.getApiUrl)() + '/file/getImgStream?idFile=' + item.img;\n        }\n        _this.listLoading = false;\n        _this.total = response.data.total;\n      });\n    },\n    search: function search() {\n      this.listQuery.page = 1;\n      this.fetchData();\n    },\n    reset: function reset() {\n      this.listQuery.title = undefined;\n      this.listQuery.author = undefined;\n      this.listQuery.startDate = undefined;\n      this.listQuery.endDate = undefined;\n      this.rangeDate = '';\n      this.listQuery.page = 1;\n      this.fetchData();\n    },\n    handleFilter: function handleFilter() {\n      this.listQuery.page = 1;\n      this.getList();\n    },\n    handleClose: function handleClose() {},\n    fetchNext: function fetchNext() {\n      this.listQuery.page = this.listQuery.page + 1;\n      this.fetchData();\n    },\n    fetchPrev: function fetchPrev() {\n      this.listQuery.page = this.listQuery.page - 1;\n      this.fetchData();\n    },\n    fetchPage: function fetchPage(page) {\n      this.listQuery.page = page;\n      this.fetchData();\n    },\n    changeSize: function changeSize(limit) {\n      this.listQuery.limit = limit;\n      this.fetchData();\n    },\n    handleCurrentChange: function handleCurrentChange(currentRow, oldCurrentRow) {\n      this.selRow = currentRow;\n    },\n    add: function add() {\n      this.$router.push({\n        path: '/cms/articleEdit'\n      });\n    },\n    checkSel: function checkSel() {\n      if (this.selRow && this.selRow.id) {\n        return true;\n      }\n      this.$message({\n        message: this.$t('common.mustSelectOne'),\n        type: 'warning'\n      });\n      return false;\n    },\n    edit: function edit() {\n      if (this.checkSel()) {\n        this.$router.push({\n          path: '/cms/articleEdit',\n          query: {\n            id: this.selRow.id\n          }\n        });\n      }\n    },\n    remove: function remove() {\n      var _this2 = this;\n      if (this.checkSel()) {\n        var id = this.selRow.id;\n        this.$confirm(this.$t('common.deleteConfirm'), this.$t('common.tooltip'), {\n          confirmButtonText: this.$t('button.submit'),\n          cancelButtonText: this.$t('button.cancel'),\n          type: 'warning'\n        }).then(function () {\n          _article.default.remove(id).then(function (response) {\n            _this2.$message({\n              message: _this2.$t('common.optionSuccess'),\n              type: 'success'\n            });\n            _this2.fetchData();\n          });\n        }).catch(function () {});\n      }\n    }\n  }\n};",null]}