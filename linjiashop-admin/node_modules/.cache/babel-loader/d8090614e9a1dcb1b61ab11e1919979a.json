{"remainingRequest":"/home/linjiashop/linjiashop-admin/node_modules/babel-loader/lib/index.js!/home/linjiashop/linjiashop-admin/src/views/shop/goods/goodsEdit.js","dependencies":[{"path":"/home/linjiashop/linjiashop-admin/src/views/shop/goods/goodsEdit.js","mtime":1701070142170},{"path":"/home/linjiashop/linjiashop-admin/babel.config.js","mtime":1701070142140},{"path":"/home/linjiashop/linjiashop-admin/node_modules/cache-loader/dist/cjs.js","mtime":1701072373500},{"path":"/home/linjiashop/linjiashop-admin/node_modules/babel-loader/lib/index.js","mtime":1701072375263}],"contextDependencies":[],"result":["\"use strict\";\n\nvar _interopRequireDefault = require(\"/home/linjiashop/linjiashop-admin/node_modules/@babel/runtime/helpers/interopRequireDefault.js\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nrequire(\"core-js/modules/web.dom.iterable\");\nrequire(\"core-js/modules/es6.function.name\");\nrequire(\"core-js/modules/es6.regexp.split\");\nrequire(\"core-js/modules/es6.number.constructor\");\nvar _Tinymce = _interopRequireDefault(require(\"@/components/Tinymce\"));\nvar _plugins = _interopRequireDefault(require(\"@/components/editContainer/plugins\"));\nvar _toolbar = _interopRequireDefault(require(\"@/components/editContainer/toolbar\"));\nvar _goods = _interopRequireDefault(require(\"@/api/shop/goods\"));\nvar _attrVal = _interopRequireDefault(require(\"@/api/shop/attrVal\"));\nvar _category = _interopRequireDefault(require(\"@/api/shop/category\"));\nvar _utils = require(\"@/utils/utils\");\nvar _auth = require(\"@/utils/auth\");\nvar _goodsSku = _interopRequireDefault(require(\"../../../api/shop/goodsSku\"));\nvar _default2 = exports.default = {\n  name: 'goodsEdit',\n  components: {\n    editorImage: _Tinymce.default\n  },\n  props: {\n    id: {\n      type: String,\n      default: function _default() {\n        return 'vue-tinymce-' + +new Date() + ((Math.random() * 1000).toFixed(0) + '');\n      }\n    },\n    value: {\n      type: String,\n      default: ''\n    },\n    toolbar: {\n      type: Array,\n      required: false,\n      default: function _default() {\n        return [];\n      }\n    },\n    menubar: {\n      type: String,\n      default: 'file edit insert view format table'\n    },\n    height: {\n      type: Number,\n      required: false,\n      default: 360\n    }\n  },\n  data: function data() {\n    return {\n      spec: 'one',\n      specs: [],\n      specDialogFormVisible: false,\n      skuForm: {},\n      attrKeySel: '',\n      attrKeyList: [],\n      attrValList: [],\n      showAddAttrKey: false,\n      attrKeyForm: {\n        attrName: ''\n      },\n      attrValForm: {\n        attrVal: ''\n      },\n      attrValSel: '',\n      attrValListSel: [],\n      tags: [],\n      form: {\n        pic: '',\n        gallery: [],\n        idCategory: '',\n        isHot: false,\n        isNew: false\n      },\n      skuList: [],\n      uploadUrl: '',\n      uploadFileId: '',\n      uploadHeaders: {\n        'Authorization': ''\n      },\n      idGoods: '',\n      active: 0,\n      categories: [],\n      tinymceId: 'tinymceId',\n      fullscreen: false,\n      languageTypeList: {\n        'en': 'en',\n        'zh': 'zh_CN'\n      },\n      galleryList: [],\n      apiUrl: (0, _utils.getApiUrl)()\n    };\n  },\n  computed: {\n    language: function language() {\n      return this.languageTypeList[this.$store.getters.language];\n    }\n  },\n  watch: {\n    value: function value(val) {\n      var _this2 = this;\n      if (!this.hasChange && this.hasInit) {\n        this.$nextTick(function () {\n          return window.tinymce.get(_this2.tinymceId).setContent(val || '');\n        });\n      }\n    },\n    language: function language() {\n      var _this3 = this;\n      this.destroyTinymce();\n      this.$nextTick(function () {\n        return _this3.initTinymce();\n      });\n    }\n  },\n  mounted: function mounted() {\n    this.init();\n    this.initTinymce();\n  },\n  activated: function activated() {\n    this.initTinymce();\n  },\n  deactivated: function deactivated() {\n    this.destroyTinymce();\n  },\n  destroyed: function destroyed() {\n    this.destroyTinymce();\n  },\n  methods: {\n    init: function init() {\n      this.uploadUrl = (0, _utils.getApiUrl)() + '/file';\n      this.uploadHeaders['Authorization'] = (0, _auth.getToken)();\n      this.idGoods = this.$route.query.id;\n      this.fetchData();\n    },\n    fetchData: function fetchData() {\n      var _this4 = this;\n      this.listLoading = true;\n      if (this.idGoods) {\n        _goods.default.get(this.idGoods).then(function (response) {\n          _this4.form = response.data.goods;\n          _this4.idGoods = _this4.form.id;\n          _this4.skuList = response.data.skuList;\n          _this4.spec = _this4.skuList.length > 0 ? 'more' : 'one';\n          var galleryArr = _this4.form.gallery.split(',');\n          for (var i = 0; i < galleryArr.length; i++) {\n            if (galleryArr[i] != '') {\n              _this4.galleryList.push({\n                id: galleryArr[i],\n                url: _this4.apiUrl + '/file/getImgStream?idFile=' + galleryArr[i]\n              });\n            }\n          }\n          _this4.setContent(_this4.form.detail);\n          _attrVal.default.getAttrBy(_this4.form.idCategory).then(function (response2) {\n            _this4.attrKeyList = response2.data.keyList;\n            _this4.attrValList = response2.data.valList;\n          });\n        });\n      }\n      _category.default.getList().then(function (response) {\n        _this4.categories = response.data;\n      });\n    },\n    prev: function prev() {\n      if (this.active > 0) {\n        this.active -= 1;\n      }\n    },\n    save: function save() {\n      var _this5 = this;\n      if (!this.idGoods && this.active == 0) {\n        //第一步提交的时候先保存下商品以便获取商品id\n        if (this.form.name === '' || this.form.idCategory === '' || this.form.descript === '') {\n          this.$message({\n            message: '请输入必要的商品项目',\n            type: 'error'\n          });\n          return;\n        }\n        _goods.default.saveBaseInfo({\n          name: this.form.name,\n          idCategory: this.form.idCategory,\n          descript: this.form.descript,\n          isNew: this.form.isNew,\n          isHot: this.form.isHot\n        }).then(function (response) {\n          _this5.idGoods = response.data;\n        });\n        _attrVal.default.getAttrBy(this.form.idCategory).then(function (response2) {\n          _this5.attrKeyList = response2.data.keyList;\n          _this5.attrValList = response2.data.valList;\n        });\n      }\n      if (this.active < 3) {\n        this.active++;\n        return;\n      }\n      var content = this.getContent();\n      var gallery = this.getGallery();\n      if (this.spec === 'more') {\n        //如果商品配置多规格，则删除单规格配置\n        this.form.price = '';\n        this.form.marketingPrice = '';\n        this.form.stock = '';\n      }\n      _goods.default.save({\n        name: this.form.name,\n        pic: this.form.pic,\n        gallery: gallery,\n        idCategory: this.form.idCategory,\n        descript: this.form.descript,\n        detail: content,\n        stock: this.form.stock,\n        price: this.form.price,\n        isDelete: this.form.isDelete,\n        isOnSale: this.form.isOnSale,\n        id: this.idGoods,\n        isNew: this.form.isNew,\n        isHot: this.form.isHot\n      }).then(function (response) {\n        _this5.$message({\n          message: _this5.$t('common.optionSuccess'),\n          type: 'success'\n        });\n        _this5.$router.push('/goods');\n      });\n    },\n    getGallery: function getGallery() {\n      var gallery = '';\n      for (var i = 0; i < this.galleryList.length; i++) {\n        if (i == 0) {\n          gallery = this.galleryList[i].id;\n        } else {\n          gallery += ',' + this.galleryList[i].id;\n        }\n      }\n      return gallery;\n    },\n    handleRemove: function handleRemove(file, fileList) {\n      for (var i = 0; i < this.galleryList.length; i++) {\n        if (this.galleryList[i].id === file.id) {\n          this.galleryList.splice(i, 1);\n        }\n      }\n    },\n    handleUploadPicSuccess: function handleUploadPicSuccess(response, raw) {\n      if (response.code === 20000) {\n        this.form.pic = response.data.realFileName;\n      } else {\n        this.$message({\n          message: this.$t('common.uploadError'),\n          type: 'error'\n        });\n      }\n    },\n    handleUploadGallerySuccess: function handleUploadGallerySuccess(response, raw) {\n      if (response.code === 20000) {\n        this.galleryList.push({\n          id: response.data.realFileName,\n          url: this.apiUrl + '/file/getImgStream?idFile=' + response.data.realFileName\n        });\n      } else {\n        this.$message({\n          message: this.$t('common.uploadError'),\n          type: 'error'\n        });\n      }\n    },\n    initTinymce: function initTinymce() {\n      var _this6 = this;\n      var _this = this;\n      window.tinymce.init({\n        value: '',\n        language: this.language,\n        selector: \"#\".concat(this.tinymceId),\n        height: this.height,\n        body_class: 'panel-body ',\n        object_resizing: false,\n        toolbar: this.toolbar.length > 0 ? this.toolbar : _toolbar.default,\n        menubar: this.menubar,\n        plugins: _plugins.default,\n        end_container_on_empty_block: true,\n        powerpaste_word_import: 'clean',\n        code_dialog_height: 450,\n        code_dialog_width: 1000,\n        advlist_bullet_styles: 'square',\n        advlist_number_styles: 'default',\n        imagetools_cors_hosts: ['www.tinymce.com', 'codepen.io'],\n        default_link_target: '_blank',\n        link_title: false,\n        nonbreaking_force_tab: true,\n        // inserting nonbreaking space &nbsp; need Nonbreaking Space Plugin\n        init_instance_callback: function init_instance_callback(editor) {\n          if (_this.value) {\n            editor.setContent(_this.value);\n          }\n          _this.hasInit = true;\n          editor.on('NodeChange Change KeyUp SetContent', function () {\n            _this6.hasChange = true;\n            var content = editor.getContent();\n            _this6.form.content = content;\n          });\n        },\n        setup: function setup(editor) {\n          editor.on('FullscreenStateChanged', function (e) {\n            _this.fullscreen = e.state;\n          });\n        }\n      });\n    },\n    destroyTinymce: function destroyTinymce() {\n      var tinymce = window.tinymce.get(this.tinymceId);\n      if (this.fullscreen) {\n        tinymce.execCommand('mceFullScreen');\n      }\n      if (tinymce) {\n        tinymce.destroy();\n      }\n    },\n    setContent: function setContent(value) {\n      window.tinymce.get(this.tinymceId).setContent(value);\n    },\n    getContent: function getContent() {\n      return window.tinymce.get(this.tinymceId).getContent();\n    },\n    imageSuccessCBK: function imageSuccessCBK(arr) {\n      var _this = this;\n      arr.forEach(function (v) {\n        window.tinymce.get(_this.tinymceId).insertContent(\"<img class=\\\"wscnph\\\" src=\\\"\".concat(v.url, \"\\\" >\"));\n      });\n    },\n    tableRowClassName: function tableRowClassName(row, index) {\n      if (index === 1) {\n        return 'info-row';\n      } else if (index === 3) {\n        return 'positive-row';\n      }\n      return '';\n    },\n    changeAttrKey: function changeAttrKey(val) {\n      var attrValSel = [];\n      for (var i = 0; i < this.attrValList.length; i++) {\n        if (this.attrValList[i].idAttrKey === val) {\n          attrValSel.push(this.attrValList[i]);\n        }\n      }\n      this.attrValListSel = attrValSel;\n      this.attrValSel = attrValSel[0].id;\n    },\n    addAttrKeyFun: function addAttrKeyFun() {\n      this.showAddAttrKey = !this.showAddAttrKey;\n    },\n    addToTag: function addToTag() {\n      var _this7 = this;\n      var _loop = function _loop() {\n        if (_this7.attrValList[i].id === _this7.attrValSel) {\n          var currentAttrVal = _this7.attrValList[i];\n          var isRepeat = false;\n          var isRepeatAttrKey = false;\n          _this7.tags.forEach(function (val) {\n            if (val.id === currentAttrVal.id) {\n              isRepeat = true;\n            }\n            if (val.idAttrKey === currentAttrVal.idAttrKey) {\n              isRepeatAttrKey = true;\n            }\n          });\n          if (isRepeat === false && isRepeatAttrKey === false) {\n            _this7.tags.push(currentAttrVal);\n          } else {\n            _this7.$message({\n              message: isRepeat == true ? '请勿选择重复规格' : '该属性已经选择一种规格值',\n              type: 'error'\n            });\n          }\n          return 1; // break\n        }\n      };\n      for (var i = 0; i < this.attrValList.length; i++) {\n        if (_loop()) break;\n      }\n    },\n    removeTag: function removeTag(tag) {\n      this.tags.splice(this.tags.indexOf(tag), 1);\n    },\n    submitAttrKeyForm: function submitAttrKeyForm() {\n      if (this.attrKeyForm.attrName != '') {\n        var duplicationKey = false;\n        for (var i = 0; i < this.attrKeyList.length; i++) {\n          if (this.attrKeyForm.attrName === this.attrKeyList[i].attrName) {\n            duplicationKey = true;\n            break;\n          }\n        }\n        if (!duplicationKey) {\n          var id = this.attrKeyList.length + 1;\n          this.attrKeyList.push({\n            id: id,\n            attrName: this.attrKeyForm.attrName\n          });\n          this.attrKeySel = id;\n          this.addAttrKeyFun();\n        }\n      }\n      //提交属性名\n      //提交成功后，将属性名自动选择当前属性名\n      //提交成功后自动收起添加属性名表单，并且将并单清空重置\n    },\n    openAddSkuForm: function openAddSkuForm() {\n      this.tags = [];\n      this.specDialogFormVisible = true;\n    },\n    closeAddSkuForm: function closeAddSkuForm() {\n      this.specDialogFormVisible = false;\n    },\n    getSkuCode: function getSkuCode() {\n      var code = '';\n      var codeName = '';\n      for (var i = 0; i < this.tags.length; i++) {\n        if (i === 0) {\n          code = this.tags[i].id;\n          codeName = this.tags[i].attrVal;\n        } else {\n          code += ',' + this.tags[i].id;\n          codeName += ',' + this.tags[i].attrVal;\n        }\n      }\n      return {\n        code: code,\n        codeName: codeName\n      };\n    },\n    addSku: function addSku() {\n      var _this8 = this;\n      if (this.tags.length == 0) {\n        this.$message({\n          message: '请选择商品规格',\n          type: 'error'\n        });\n        return;\n      }\n      if (!this.skuForm.stock) {\n        this.$message({\n          message: '请输入库存数量',\n          type: 'error'\n        });\n        return;\n      }\n      if (!this.skuForm.marketingPrice) {\n        this.$message({\n          message: '请输入市场价',\n          type: 'error'\n        });\n        return;\n      }\n      if (!this.skuForm.price) {\n        this.$message({\n          message: '请输入价格',\n          type: 'error'\n        });\n        return;\n      }\n      var skuCodeAndName = this.getSkuCode();\n      _goodsSku.default.save({\n        idGoods: this.idGoods,\n        marketingPrice: this.skuForm.marketingPrice,\n        code: skuCodeAndName.code,\n        codeName: skuCodeAndName.codeName,\n        price: this.skuForm.price,\n        stock: this.skuForm.stock\n      }).then(function (response) {\n        var sku = response.data;\n        var updateOldSku = false;\n        for (var i = 0; i < _this8.skuList.length; i++) {\n          if (_this8.skuList[i].id === sku.id) {\n            _this8.skuList.splice(i, 1, sku);\n            updateOldSku = true;\n            break;\n          }\n        }\n        if (!updateOldSku) {\n          _this8.skuList.push(sku);\n        }\n        _this8.specDialogFormVisible = false;\n      });\n    },\n    removeSku: function removeSku(index) {\n      var records = this.skuList.splice(index, 1);\n      var record = records[0];\n      _goodsSku.default.remove(record.id);\n    }\n  }\n};",null]}