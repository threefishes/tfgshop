{"remainingRequest":"D:\\tfgshop\\linjiashop-admin\\node_modules\\thread-loader\\dist\\cjs.js!D:\\tfgshop\\linjiashop-admin\\node_modules\\babel-loader\\lib\\index.js!D:\\tfgshop\\linjiashop-admin\\src\\views\\system\\task\\log.js","dependencies":[{"path":"D:\\tfgshop\\linjiashop-admin\\src\\views\\system\\task\\log.js","mtime":1701070142000},{"path":"D:\\tfgshop\\linjiashop-admin\\babel.config.js","mtime":1701070142000},{"path":"D:\\tfgshop\\linjiashop-admin\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\tfgshop\\linjiashop-admin\\node_modules\\thread-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\tfgshop\\linjiashop-admin\\node_modules\\babel-loader\\lib\\index.js","mtime":456789000000}],"contextDependencies":[],"result":["import { logList } from '@/api/system/task';\nexport default {\n  data: function data() {\n    return {\n      taskId: '',\n      listQuery: {\n        page: 1,\n        limit: 20,\n        taskId: undefined\n      },\n      total: 0,\n      list: null,\n      listLoading: true,\n      selRow: {}\n    };\n  },\n  created: function created() {\n    this.init();\n  },\n  methods: {\n    init: function init() {\n      this.listQuery.taskId = this.$route.query.taskId;\n      this.fetchData();\n    },\n    fetchData: function fetchData() {\n      var _this = this;\n      this.listLoading = true;\n      logList(this.listQuery).then(function (response) {\n        _this.list = response.data.records;\n        _this.listLoading = false;\n        _this.total = response.data.total;\n      });\n    },\n    fetchNext: function fetchNext() {\n      this.listQuery.page = this.listQuery.page + 1;\n      this.fetchData();\n    },\n    fetchPrev: function fetchPrev() {\n      this.listQuery.page = this.listQuery.page - 1;\n      this.fetchData();\n    },\n    fetchPage: function fetchPage(page) {\n      this.listQuery.page = page;\n      this.fetchData();\n    },\n    changeSize: function changeSize(limit) {\n      this.listQuery.limit = limit;\n      this.fetchData();\n    },\n    back: function back() {\n      this.$router.go(-1);\n    }\n  }\n};",null]}