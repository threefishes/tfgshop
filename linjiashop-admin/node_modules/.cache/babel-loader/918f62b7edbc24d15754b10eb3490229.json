{"remainingRequest":"/home/linjiashop/linjiashop-admin/node_modules/babel-loader/lib/index.js!/home/linjiashop/linjiashop-admin/src/utils/aes.js","dependencies":[{"path":"/home/linjiashop/linjiashop-admin/src/utils/aes.js","mtime":1701070142166},{"path":"/home/linjiashop/linjiashop-admin/babel.config.js","mtime":1701070142140},{"path":"/home/linjiashop/linjiashop-admin/node_modules/cache-loader/dist/cjs.js","mtime":1701072373500},{"path":"/home/linjiashop/linjiashop-admin/node_modules/babel-loader/lib/index.js","mtime":1701072375263}],"contextDependencies":[],"result":["\"use strict\";\n\nvar _interopRequireDefault = require(\"/home/linjiashop/linjiashop-admin/node_modules/@babel/runtime/helpers/interopRequireDefault.js\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nrequire(\"core-js/modules/es6.regexp.to-string\");\nvar _cryptoJs = _interopRequireDefault(require(\"crypto-js/crypto-js\"));\nvar KEY = _cryptoJs.default.enc.Utf8.parse(\"v80v8g2ta05rrg2k\"); //  密钥        长度必须为16位\nvar IV = _cryptoJs.default.enc.Utf8.parse(\"6gycoeef15nql8ab\"); //  初始向量    长度随意\nvar _default = exports.default = {\n  //加密\n  encrypt: function encrypt(word) {\n    var key = KEY;\n    var iv = IV;\n    var srcs = _cryptoJs.default.enc.Utf8.parse(word);\n    var encrypted = _cryptoJs.default.AES.encrypt(srcs, key, {\n      iv: iv,\n      mode: _cryptoJs.default.mode.CBC,\n      padding: _cryptoJs.default.pad.ZeroPadding\n    });\n    // console.log(\"-=-=-=-\", encrypted.ciphertext)\n    return _cryptoJs.default.enc.Base64.stringify(encrypted.ciphertext);\n  },\n  //解密\n  decrypt: function decrypt(word) {\n    var key = KEY;\n    var iv = IV;\n    var base64 = _cryptoJs.default.enc.Base64.parse(word);\n    var src = _cryptoJs.default.enc.Base64.stringify(base64);\n    var decrypt = _cryptoJs.default.AES.decrypt(src, key, {\n      iv: iv,\n      mode: _cryptoJs.default.mode.CBC,\n      padding: _cryptoJs.default.pad.ZeroPadding\n    });\n    var decryptedStr = decrypt.toString(_cryptoJs.default.enc.Utf8);\n    return decryptedStr.toString();\n  }\n};",null]}