{"remainingRequest":"/home/linjiashop/linjiashop-admin/node_modules/babel-loader/lib/index.js!/home/linjiashop/linjiashop-admin/src/views/shop/category/category.js?vue&type=script&lang=js&external","dependencies":[{"path":"/home/linjiashop/linjiashop-admin/src/views/shop/category/category.js","mtime":1701070142169},{"path":"/home/linjiashop/linjiashop-admin/babel.config.js","mtime":1701070142140},{"path":"/home/linjiashop/linjiashop-admin/node_modules/cache-loader/dist/cjs.js","mtime":1701072373500},{"path":"/home/linjiashop/linjiashop-admin/node_modules/babel-loader/lib/index.js","mtime":1701072375263}],"contextDependencies":[],"result":["\"use strict\";\n\nvar _interopRequireDefault = require(\"/home/linjiashop/linjiashop-admin/node_modules/@babel/runtime/helpers/interopRequireDefault.js\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nrequire(\"core-js/modules/es6.array.sort\");\nrequire(\"core-js/modules/es6.function.name\");\nvar _category = _interopRequireDefault(require(\"@/api/shop/category\"));\nvar _attrKey = _interopRequireDefault(require(\"@/api/shop/attrKey\"));\nvar _attrVal = _interopRequireDefault(require(\"@/api/shop/attrVal\"));\nvar _utils = require(\"@/utils/utils\");\nvar _auth = require(\"@/utils/auth\");\nvar _index = _interopRequireDefault(require(\"@/directive/permission/index.js\"));\nvar _elementUi = require(\"element-ui\");\nvar _default = exports.default = {\n  name: 'category',\n  directives: {\n    permission: _index.default\n  },\n  data: function data() {\n    return {\n      uploadUrl: '',\n      uploadFileId: '',\n      uploadHeaders: {\n        'Authorization': ''\n      },\n      rootList: [],\n      formVisible: false,\n      formTitle: '添加商品类别',\n      isAdd: true,\n      form: {\n        name: '',\n        icon: '',\n        id: ''\n      },\n      total: 0,\n      list: [],\n      listLoading: true,\n      selRow: {},\n      apiUrl: (0, _utils.getApiUrl)(),\n      banner: {\n        idCategory: '',\n        activeName: 'first',\n        visible: false,\n        list: []\n      },\n      attrKey: {\n        idCategory: '',\n        visible: false,\n        list: []\n      },\n      attrVal: {\n        idAttrKey: '',\n        visible: false,\n        list: []\n      }\n    };\n  },\n  filters: {\n    statusFilter: function statusFilter(status) {\n      var statusMap = {\n        published: 'success',\n        draft: 'gray',\n        deleted: 'danger'\n      };\n      return statusMap[status];\n    }\n  },\n  created: function created() {\n    this.init();\n  },\n  methods: {\n    init: function init() {\n      this.uploadUrl = (0, _utils.getApiUrl)() + '/file';\n      this.uploadHeaders['Authorization'] = (0, _auth.getToken)();\n      this.fetchData();\n    },\n    fetchData: function fetchData() {\n      var _this = this;\n      this.listLoading = true;\n      _category.default.getList(this.listQuery).then(function (response) {\n        _this.list = response.data;\n        _this.rootList = Object.assign({}, response.data);\n        _this.listLoading = false;\n      });\n    },\n    handleCurrentChange: function handleCurrentChange(currentRow, oldCurrentRow) {\n      this.selRow = currentRow;\n    },\n    resetForm: function resetForm() {\n      this.form = {\n        name: '',\n        icon: '',\n        id: ''\n      };\n    },\n    add: function add() {\n      this.resetForm();\n      this.formTitle = '添加商品类别';\n      this.formVisible = true;\n      this.isAdd = true;\n    },\n    save: function save() {\n      var _this2 = this;\n      this.$refs['form'].validate(function (valid) {\n        if (valid) {\n          _category.default.save({\n            name: _this2.form.name,\n            url: _this2.form.url,\n            icon: _this2.form.icon,\n            id: _this2.form.id,\n            sort: _this2.form.sort,\n            descript: _this2.form.descript,\n            pid: _this2.form.pid\n          }).then(function (response) {\n            _this2.$message({\n              message: _this2.$t('common.optionSuccess'),\n              type: 'success'\n            });\n            _this2.fetchData();\n            _this2.formVisible = false;\n          });\n        } else {\n          return false;\n        }\n      });\n    },\n    checkSel: function checkSel() {\n      if (this.selRow && this.selRow.id) {\n        return true;\n      }\n      this.$message({\n        message: this.$t('common.mustSelectOne'),\n        type: 'warning'\n      });\n      return false;\n    },\n    edit: function edit(data) {\n      this.isAdd = false;\n      this.form = data;\n      this.formTitle = '编辑商品类别';\n      this.formVisible = true;\n    },\n    changeShowIndex: function changeShowIndex(data) {\n      var _this3 = this;\n      if (data.pid) {\n        this.$message({\n          message: '二级菜单不支持该操作',\n          type: 'warning'\n        });\n        data.showIndex = false;\n        return;\n      }\n      _category.default.changeShowIndex(data.id, data.showIndex).then(function (response) {\n        _this3.$message({\n          message: _this3.$t('common.optionSuccess'),\n          type: 'success'\n        });\n      });\n    },\n    remove: function remove(data) {\n      var _this4 = this;\n      var id = data.id;\n      this.$confirm(this.$t('common.deleteConfirm'), this.$t('common.tooltip'), {\n        confirmButtonText: this.$t('button.submit'),\n        cancelButtonText: this.$t('button.cancel'),\n        type: 'warning'\n      }).then(function () {\n        _category.default.remove(id).then(function (response) {\n          _this4.$message({\n            message: _this4.$t('common.optionSuccess'),\n            type: 'success'\n          });\n          _this4.fetchData();\n        }).catch(function (err) {});\n      }).catch(function () {});\n    },\n    bannerMgr: function bannerMgr(data) {\n      var _this5 = this;\n      if (data.pid) {\n        this.$message({\n          message: '二级菜单不支持该操作',\n          type: 'warning'\n        });\n        data.showIndex = false;\n        return;\n      }\n      this.banner.visible = true;\n      this.banner.idCategory = data.id;\n      _category.default.getBanners(data.id).then(function (response) {\n        _this5.banner.list = response.data;\n      });\n    },\n    bannerRemove: function bannerRemove(idBanner) {\n      var _this6 = this;\n      _category.default.removeBanner(this.banner.idCategory, idBanner).then(function (response) {\n        _this6.$message({\n          message: _this6.$t('common.optionSuccess'),\n          type: 'success'\n        });\n        _this6.bannerMgr({\n          id: _this6.banner.idCategory\n        });\n      });\n    },\n    addBanner: function addBanner() {\n      this.$router.push({\n        path: 'banner',\n        query: {\n          idCategory: this.banner.idCategory\n        }\n      });\n    },\n    attrKeyMgr: function attrKeyMgr(data) {\n      var _this7 = this;\n      this.attrKey.visible = true;\n      this.attrKey.idCategory = data.id;\n      _category.default.getAttrKeys(data.id).then(function (response) {\n        _this7.attrKey.list = response.data;\n      });\n    },\n    attrKeyAdd: function attrKeyAdd() {\n      var _this8 = this;\n      this.$prompt('请输入属性名', '提示', {\n        confirmButtonText: '确定',\n        cancelButtonText: '取消'\n      }).then(function (_ref) {\n        var value = _ref.value;\n        if (!value || value === '') {\n          _this8.$message({\n            type: 'warning',\n            message: '属性名不能为空'\n          });\n        }\n        _attrKey.default.save({\n          attrName: value,\n          idCategory: _this8.attrKey.idCategory\n        }).then(function (response) {\n          _this8.$message({\n            type: 'success',\n            message: '新增属性成功'\n          });\n          _category.default.getAttrKeys(_this8.attrKey.idCategory).then(function (response2) {\n            _this8.attrKey.list = response2.data;\n          });\n        });\n      });\n    },\n    attrKeyEdit: function attrKeyEdit(item) {\n      var _this9 = this;\n      this.$prompt('请输入属性名', '提示', {\n        confirmButtonText: '确定',\n        cancelButtonText: '取消',\n        inputValue: item.attrName\n      }).then(function (_ref2) {\n        var value = _ref2.value;\n        if (!value || value === '') {\n          _this9.$message({\n            type: 'warning',\n            message: '属性名不能为空'\n          });\n        }\n        _attrKey.default.updateAttrName(item.id, value).then(function (response) {\n          item.attrName = value;\n          _this9.$message({\n            type: 'success',\n            message: '编辑成功'\n          });\n        });\n        return;\n      });\n    },\n    attrKeyRemove: function attrKeyRemove(id) {\n      var _this10 = this;\n      _attrKey.default.remove(id).then(function (response) {\n        _this10.$message({\n          type: 'success',\n          message: '删除成功'\n        });\n        _category.default.getAttrKeys(_this10.attrKey.idCategory).then(function (response2) {\n          _this10.attrKey.list = response2.data;\n        });\n      });\n    },\n    openAttrValDialog: function openAttrValDialog(item) {\n      var _this11 = this;\n      this.attrVal.idAttrKey = item.id;\n      this.attrVal.visible = true;\n      _attrVal.default.getAttrVals(this.attrVal.idAttrKey).then(function (response2) {\n        _this11.attrVal.list = response2.data;\n      });\n    },\n    attrValAdd: function attrValAdd() {\n      var _this12 = this;\n      this.$prompt('请输入属性名', '提示', {\n        confirmButtonText: '确定',\n        cancelButtonText: '取消'\n      }).then(function (_ref3) {\n        var value = _ref3.value;\n        if (!value || value === '') {\n          _this12.$message({\n            type: 'warning',\n            message: '属性名不能为空'\n          });\n        }\n        _attrVal.default.save({\n          attrVal: value,\n          idAttrKey: _this12.attrVal.idAttrKey\n        }).then(function (response) {\n          _this12.$message({\n            type: 'success',\n            message: '新增属性成功'\n          });\n          _attrVal.default.getAttrVals(_this12.attrVal.idAttrKey).then(function (response2) {\n            _this12.attrVal.list = response2.data;\n          });\n        });\n      });\n    },\n    attrValEdit: function attrValEdit(item) {\n      var _this13 = this;\n      this.$prompt('请输入属性名', '提示', {\n        confirmButtonText: '确定',\n        cancelButtonText: '取消',\n        inputValue: item.attrVal\n      }).then(function (_ref4) {\n        var value = _ref4.value;\n        if (!value || value === '') {\n          _this13.$message({\n            type: 'warning',\n            message: '属性名不能为空'\n          });\n        }\n        _attrVal.default.updateAttrVal(item.id, value).then(function (response) {\n          item.attrName = value;\n          _this13.$message({\n            type: 'success',\n            message: '编辑成功'\n          });\n          _attrVal.default.getAttrVals(_this13.attrVal.idAttrKey).then(function (response2) {\n            _this13.attrVal.list = response2.data;\n          });\n        });\n        return;\n      });\n    },\n    attrValRemove: function attrValRemove(id) {\n      var _this14 = this;\n      _attrVal.default.remove(id).then(function (response) {\n        _this14.$message({\n          type: 'success',\n          message: '删除成功'\n        });\n        _attrVal.default.getAttrVals(_this14.attrVal.idAttrKey).then(function (response2) {\n          _this14.attrVal.list = response2.data;\n        });\n      });\n    },\n    handleBeforeUpload: function handleBeforeUpload() {\n      this.loadingInstance = _elementUi.Loading.service({\n        lock: true,\n        text: this.$t('common.uploading'),\n        spinner: 'el-icon-loading',\n        background: 'rgba(0, 0, 0, 0.7)'\n      });\n    },\n    handleUploadSuccess: function handleUploadSuccess(response, raw) {\n      this.loadingInstance.close();\n      if (response.code === 20000) {\n        this.form.icon = response.data.realFileName;\n      } else {\n        this.$message({\n          message: this.$t('common.uploadError'),\n          type: 'error'\n        });\n      }\n    }\n  }\n};",null]}