{"remainingRequest":"/home/linjiashop/linjiashop-mobile/node_modules/thread-loader/dist/cjs.js!/home/linjiashop/linjiashop-mobile/node_modules/babel-loader/lib/index.js!/home/linjiashop/linjiashop-mobile/src/view/login/login.js?vue&type=script&lang=js&external","dependencies":[{"path":"/home/linjiashop/linjiashop-mobile/src/view/login/login.js","mtime":1701070142212},{"path":"/home/linjiashop/linjiashop-mobile/babel.config.js","mtime":1701070142207},{"path":"/home/linjiashop/linjiashop-mobile/node_modules/cache-loader/dist/cjs.js","mtime":1701139867369},{"path":"/home/linjiashop/linjiashop-mobile/node_modules/thread-loader/dist/cjs.js","mtime":1701139866811},{"path":"/home/linjiashop/linjiashop-mobile/node_modules/babel-loader/lib/index.js","mtime":1701139868485}],"contextDependencies":[],"result":["import _defineProperty from \"/home/linjiashop/linjiashop-mobile/node_modules/@babel/runtime-corejs2/helpers/esm/defineProperty.js\";\nimport \"vant/es/dialog/style\";\nimport _Dialog from \"vant/es/dialog\";\nimport \"vant/es/toast/style\";\nimport _Toast from \"vant/es/toast\";\nimport \"vant/es/button/style\";\nimport _Button from \"vant/es/button\";\nimport \"vant/es/field/style\";\nimport _Field from \"vant/es/field\";\nimport \"vant/es/tabbar-item/style\";\nimport _TabbarItem from \"vant/es/tabbar-item\";\nimport \"vant/es/tabbar/style\";\nimport _Tabbar from \"vant/es/tabbar\";\nimport \"vant/es/cell-group/style\";\nimport _CellGroup from \"vant/es/cell-group\";\nimport \"vant/es/cell/style\";\nimport _Cell from \"vant/es/cell\";\nimport \"vant/es/icon/style\";\nimport _Icon from \"vant/es/icon\";\nimport \"vant/es/col/style\";\nimport _Col from \"vant/es/col\";\nimport \"vant/es/row/style\";\nimport _Row from \"vant/es/row\";\nvar _components;\nimport loginApi from '@/api/login';\nimport store from '@/store';\nimport storage from '@/utils/storage';\nimport AesUtil from '@/utils/aes';\nexport default {\n  components: (_components = {}, _defineProperty(_defineProperty(_defineProperty(_defineProperty(_defineProperty(_defineProperty(_defineProperty(_defineProperty(_defineProperty(_defineProperty(_components, _Row.name, _Row), _Col.name, _Col), _Icon.name, _Icon), _Cell.name, _Cell), _CellGroup.name, _CellGroup), _Tabbar.name, _Tabbar), _TabbarItem.name, _TabbarItem), _Field.name, _Field), _Button.name, _Button), _Toast.name, _Toast), _defineProperty(_components, _Dialog.name, _Dialog)),\n  data: function data() {\n    return {\n      mobile: '',\n      smsCode: '',\n      password: '',\n      activeFooter: 3,\n      show1: false,\n      show2: true,\n      redirect: '',\n      hasSendSms: false,\n      second: 60\n    };\n  },\n  mounted: function mounted() {\n    this.init();\n  },\n  methods: {\n    init: function init() {\n      if (store.state.app.user.nickName) {\n        this.$router.push({\n          path: '/index'\n        });\n        return;\n      }\n      if (this.$route.query.redirect) {\n        this.redirect = this.$route.query.redirect;\n      }\n    },\n    toLoginByPassword: function toLoginByPassword() {\n      this.show1 = false;\n      this.show2 = true;\n    },\n    toRegister: function toRegister() {\n      this.show2 = false;\n      this.show1 = true;\n    },\n    resetForLogin: function resetForLogin() {\n      //登录成功后初始化数据状态\n      //清空缓存中的地址信息\n      storage.set('chosenAddressId', '');\n    },\n    loginOrRegister: function loginOrRegister() {\n      var _this = this;\n      loginApi.loginOrReg(this.mobile, this.smsCode).then(function (response) {\n        store.dispatch('app/toggleToken', response.data.token);\n        store.dispatch('app/toggleUser', response.data.user);\n        if (response.data.initPassword) {\n          _Toast({\n            duration: 8000,\n            message: '欢迎新用户，请谨慎保管您的初始密码：' + response.data.initPassword\n          });\n        }\n        _this.resetForLogin();\n        if (_this.redirect) {\n          _this.$router.push({\n            path: _this.redirect\n          });\n        } else {\n          _this.$router.push({\n            path: '/index'\n          });\n        }\n      }).then(function (err) {\n        // Toast.fail(err)\n      });\n    },\n    loginByPass: function loginByPass() {\n      var _this2 = this;\n      loginApi.loginByPassword(this.mobile, AesUtil.encrypt(this.password)).then(function (response) {\n        store.dispatch('app/toggleToken', response.data.token);\n        store.dispatch('app/toggleUser', response.data.user);\n        _this2.resetForLogin();\n        if (_this2.redirect) {\n          _this2.$router.push({\n            path: _this2.redirect\n          });\n        } else {\n          _this2.$router.push({\n            path: '/index'\n          });\n        }\n      }).catch(function (err) {\n        _Toast(err);\n      });\n    },\n    sendSms: function sendSms() {\n      var _this3 = this;\n      this.hasSendSms = true;\n      loginApi.sendSmsCode(this.mobile).then(function (response) {\n        _this3.setTimeOut();\n      });\n    },\n    setTimeOut: function setTimeOut() {\n      var _this4 = this;\n      var timer = setTimeout(function () {\n        _this4.setTimeOut();\n        if (_this4.second > 0) {\n          _this4.second--;\n        }\n      }, 1000);\n      if (this.second <= 0) {\n        this.hasSendSms = false;\n        this.second = 60;\n        clearTimeout(timer);\n      }\n    }\n  }\n};",null]}