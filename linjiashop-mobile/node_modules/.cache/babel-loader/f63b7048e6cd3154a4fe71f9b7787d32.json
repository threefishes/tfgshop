{"remainingRequest":"/home/linjiashop/linjiashop-mobile/node_modules/thread-loader/dist/cjs.js!/home/linjiashop/linjiashop-mobile/node_modules/babel-loader/lib/index.js!/home/linjiashop/linjiashop-mobile/src/view/goods/goodsList.js?vue&type=script&lang=js&external","dependencies":[{"path":"/home/linjiashop/linjiashop-mobile/src/view/goods/goodsList.js","mtime":1701070142211},{"path":"/home/linjiashop/linjiashop-mobile/babel.config.js","mtime":1701070142207},{"path":"/home/linjiashop/linjiashop-mobile/node_modules/cache-loader/dist/cjs.js","mtime":1701139867369},{"path":"/home/linjiashop/linjiashop-mobile/node_modules/thread-loader/dist/cjs.js","mtime":1701139866811},{"path":"/home/linjiashop/linjiashop-mobile/node_modules/babel-loader/lib/index.js","mtime":1701139868485}],"contextDependencies":[],"result":["import _defineProperty from \"/home/linjiashop/linjiashop-mobile/node_modules/@babel/runtime-corejs2/helpers/esm/defineProperty.js\";\nimport \"vant/es/lazyload/style\";\nimport _Lazyload from \"vant/es/lazyload\";\nimport \"vant/es/list/style\";\nimport _List from \"vant/es/list\";\nimport \"vant/es/divider/style\";\nimport _Divider from \"vant/es/divider\";\nimport \"vant/es/toast/style\";\nimport _Toast from \"vant/es/toast\";\nimport \"vant/es/card/style\";\nimport _Card from \"vant/es/card\";\nimport \"vant/es/tabs/style\";\nimport _Tabs from \"vant/es/tabs\";\nimport \"vant/es/tab/style\";\nimport _Tab from \"vant/es/tab\";\nimport \"vant/es/swipe-item/style\";\nimport _SwipeItem from \"vant/es/swipe-item\";\nimport \"vant/es/swipe/style\";\nimport _Swipe from \"vant/es/swipe\";\nimport \"vant/es/tabbar-item/style\";\nimport _TabbarItem from \"vant/es/tabbar-item\";\nimport \"vant/es/tabbar/style\";\nimport _Tabbar from \"vant/es/tabbar\";\nimport \"vant/es/cell-group/style\";\nimport _CellGroup from \"vant/es/cell-group\";\nimport \"vant/es/cell/style\";\nimport _Cell from \"vant/es/cell\";\nimport \"vant/es/icon/style\";\nimport _Icon from \"vant/es/icon\";\nimport \"vant/es/col/style\";\nimport _Col from \"vant/es/col\";\nimport \"vant/es/row/style\";\nimport _Row from \"vant/es/row\";\nvar _components;\nimport category from '@/api/category';\nimport goods from '@/api/goods';\nimport store from '@/store';\nvar baseApi = process.env.VUE_APP_BASE_API;\nexport default {\n  components: (_components = {}, _defineProperty(_defineProperty(_defineProperty(_defineProperty(_defineProperty(_defineProperty(_defineProperty(_defineProperty(_defineProperty(_defineProperty(_components, _Row.name, _Row), _Col.name, _Col), _Icon.name, _Icon), _Cell.name, _Cell), _CellGroup.name, _CellGroup), _Tabbar.name, _Tabbar), _TabbarItem.name, _TabbarItem), _Swipe.name, _Swipe), _SwipeItem.name, _SwipeItem), _Tab.name, _Tab), _defineProperty(_defineProperty(_defineProperty(_defineProperty(_defineProperty(_defineProperty(_components, _Tabs.name, _Tabs), _Card.name, _Card), _Toast.name, _Toast), _Divider.name, _Divider), _List.name, _List), \"Lazyload\", _Lazyload)),\n  data: function data() {\n    return {\n      loading: false,\n      finished: false,\n      navList: [],\n      banners: [],\n      goodsList: [],\n      activeFooter: 0,\n      activeNav: undefined,\n      total: 0,\n      listQuery: {\n        page: 1,\n        limit: 50,\n        idCategory: undefined\n      },\n      count: 0,\n      isLoading: false\n    };\n  },\n  mounted: function mounted() {\n    this.init();\n  },\n  methods: {\n    init: function init() {\n      var _this = this;\n      this.activeNav = parseInt(this.$route.query.itemId);\n      var categoryData = store.state.app.category;\n      if (!categoryData || categoryData.length == 0) {\n        var platform = navigator.platform;\n        store.dispatch('app/toggleDevice', platform);\n        category.getAllCategories().then(function (response) {\n          var navList = response.data;\n          navList.splice(0, 0, {\n            name: '推荐',\n            id: '0'\n          });\n          _this.navList = navList;\n          store.dispatch('app/toggleCategory', navList);\n          _this.getBanners(_this.activeNav);\n        }).catch(function (err) {\n          console.log('err', err);\n          _Toast.fail(err);\n        });\n      } else {\n        this.navList = categoryData;\n        this.getBanners(this.activeNav);\n      }\n      this.getGoods(this.activeNav);\n    },\n    getBanners: function getBanners(categoryIndex) {\n      var bannerList = null;\n      for (var i in this.navList) {\n        if (this.navList[i].id == categoryIndex) {\n          bannerList = this.navList[i].bannerList;\n        }\n      }\n      var imgList = new Array();\n      for (var _i = 0; _i < bannerList.length; _i++) {\n        var url = '';\n        var page = bannerList[_i].page;\n        if (page != '') {\n          if (page.indexOf('http') === 0) {\n            url = page;\n          } else {\n            url = '#/' + bannerList[_i].page;\n          }\n        }\n        if (bannerList[_i].param != '') {\n          var param = JSON.parse(bannerList[_i].param);\n          for (var key in param) {\n            url += '/' + param[key];\n          }\n        }\n        imgList.push({\n          url: url,\n          path: baseApi + '/file/getImgStream?idFile=' + bannerList[_i].idFile\n        });\n      }\n      this.banners = imgList;\n    },\n    getGoods: function getGoods(idCategory) {\n      var _this2 = this;\n      this.listQuery['idCategory'] = idCategory;\n      goods.queryGoods(this.listQuery).then(function (response) {\n        var list = response.data.records;\n        _this2.total = response.data.total;\n        for (var index in list) {\n          var item = list[index];\n          item.img = baseApi + '/file/getImgStream?idFile=' + item.pic;\n        }\n        _this2.goodsList = list;\n      }).catch(function (err) {\n        _Toast(err);\n      });\n    },\n    loadMore: function loadMore() {\n      this.loading = false;\n      this.finished = true;\n    },\n    onClickNav: function onClickNav(index, title) {\n      if (index === '0') {\n        this.$router.push({\n          path: '/index'\n        });\n        return;\n      }\n      this.activeNav = index;\n      this.getBanners(index);\n      this.getGoods(index);\n    },\n    clickSwipe: function clickSwipe(index, p2) {},\n    viewGoodsDetail: function viewGoodsDetail(id) {\n      this.$router.push({\n        path: '/goods/' + id\n      });\n    },\n    formatPrice: function formatPrice(price) {\n      return (price / 100).toFixed(2);\n    }\n  }\n};",null]}