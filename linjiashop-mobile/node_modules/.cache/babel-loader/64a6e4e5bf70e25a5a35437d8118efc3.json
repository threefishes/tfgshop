{"remainingRequest":"/home/linjiashop/linjiashop-mobile/node_modules/thread-loader/dist/cjs.js!/home/linjiashop/linjiashop-mobile/node_modules/babel-loader/lib/index.js!/home/linjiashop/linjiashop-mobile/src/view/order/payment/payment.js?vue&type=script&lang=js&external","dependencies":[{"path":"/home/linjiashop/linjiashop-mobile/src/view/order/payment/payment.js","mtime":1701070142213},{"path":"/home/linjiashop/linjiashop-mobile/babel.config.js","mtime":1701070142207},{"path":"/home/linjiashop/linjiashop-mobile/node_modules/cache-loader/dist/cjs.js","mtime":1701139867369},{"path":"/home/linjiashop/linjiashop-mobile/node_modules/thread-loader/dist/cjs.js","mtime":1701139866811},{"path":"/home/linjiashop/linjiashop-mobile/node_modules/babel-loader/lib/index.js","mtime":1701139868485}],"contextDependencies":[],"result":["import _defineProperty from \"/home/linjiashop/linjiashop-mobile/node_modules/@babel/runtime-corejs2/helpers/esm/defineProperty.js\";\nimport \"vant/es/toast/style\";\nimport _Toast from \"vant/es/toast\";\nimport \"vant/es/button/style\";\nimport _Button from \"vant/es/button\";\nimport \"vant/es/radio/style\";\nimport _Radio from \"vant/es/radio\";\nimport \"vant/es/radio-group/style\";\nimport _RadioGroup from \"vant/es/radio-group\";\nimport \"vant/es/cell-group/style\";\nimport _CellGroup from \"vant/es/cell-group\";\nimport \"vant/es/cell/style\";\nimport _Cell from \"vant/es/cell\";\nimport \"vant/es/nav-bar/style\";\nimport _NavBar from \"vant/es/nav-bar\";\nimport payApi from '@/api/pay';\nimport wx from 'weixin-js-sdk';\nexport default {\n  components: _defineProperty(_defineProperty(_defineProperty(_defineProperty(_defineProperty(_defineProperty(_defineProperty({}, _NavBar.name, _NavBar), _Cell.name, _Cell), _CellGroup.name, _CellGroup), _RadioGroup.name, _RadioGroup), _Radio.name, _Radio), _Button.name, _Button), _Toast.name, _Toast),\n  data: function data() {\n    return {\n      order: {},\n      payType: 'wxpay'\n    };\n  },\n  mounted: function mounted() {\n    this.init();\n  },\n  computed: {},\n  methods: {\n    init: function init() {\n      var orderSn = this.$route.query.orderSn;\n      var totalPrice = this.$route.query.totalPrice;\n      this.order = {\n        orderSn: orderSn,\n        totalPrice: totalPrice\n      };\n    },\n    pay: function pay() {\n      if (this.payType === 'wxpay') {\n        this.wxPrepare();\n      } else {\n        _Toast('支付宝支付对接中...');\n      }\n    },\n    formatPrice: function formatPrice(price) {\n      return (price / 100).toFixed(2);\n    },\n    wxPrepare: function wxPrepare() {\n      var _this = this;\n      payApi.wxPrepare({\n        orderSn: this.order.orderSn\n      }).then(function (res) {\n        // 存储微信支付数据data\n        var data = res.data;\n        //函数为分装过得  (就是调用微信支付)\n        _this.wxPay({\n          appId: data.appId,\n          nonceStr: data.nonceStr,\n          package: data.packageValue,\n          paySign: data.paySign,\n          signType: data.signType,\n          timeStamp: data.timeStamp\n        });\n      }).catch(function (err) {\n        _Toast(err);\n      });\n    },\n    wxPay: function wxPay(data) {\n      //获取后台传入的数据\n      var appId = data.appId;\n      var timestamp = data.timeStamp;\n      var nonceStr = data.nonceStr;\n      var signature = data.signature;\n      var packageValue = data.package;\n      var paySign = data.paySign;\n      var signType = data.signType;\n      var that = this;\n      //下面要发起微信支付了\n      wx.config({\n        debug: false,\n        // 开启调试模式,调用的所有api的返回值会在客户端alert出来，若要查看传入的参数，可以在pc端打开，参数信息会通过log打出，仅在pc端时才会打印。\n        appId: appId,\n        // 必填，公众号的唯一标识\n        timestamp: timestamp,\n        // 必填，生成签名的时间戳\n        nonceStr: nonceStr,\n        // 必填，生成签名的随机串\n        signature: signature,\n        // 必填，签名，见附录1\n        jsApiList: ['chooseWXPay'] // 必填，需要使用的JS接口列表，所有JS接口列表见附录2\n      });\n\n      wx.ready(function () {\n        wx.chooseWXPay({\n          timestamp: timestamp,\n          // 支付签名时间戳，注意微信jssdk中的所有使用timestamp字段均为小写。但最新版的支付后台生成签名使用的timeStamp字段名需大写其中的S字符\n          nonceStr: nonceStr,\n          // 支付签名随机串，不长于 32 位\n          package: packageValue,\n          // 统一支付接口返回的prepay_id参数值，提交格式如：prepay_id=***）\n          signType: signType,\n          // 签名方式，默认为'SHA1'，使用新版支付需传入'MD5'\n          paySign: paySign,\n          // 支付签名\n          success: function success(res) {\n            // 支付成功后的回调函数\n            that.$router.push('/payment/callback/' + that.order.orderSn);\n          },\n          fail: function fail(res) {\n            //失败回调函数\n            _Toast('支付失败');\n          }\n        });\n      });\n      wx.error(function (res) {\n        console.log('微信支付失败', res);\n        _Toast('支付失败');\n        // config信息验证失败会执行error函数，如签名过期导致验证失败，具体错误信息可以打开config的debug模式查看，也可以在返回的res参数中查看，对于SPA可以在这里更新签名。\n        /*alert(\"config信息验证失败\")*/\n      });\n    }\n  }\n};",null]}